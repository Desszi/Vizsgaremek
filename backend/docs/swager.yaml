openapi: 3.0.0
info:
  version: 1.0.0
  title: ERP API
  description: A sample blog API to illustrate REST API concepts
servers:
  - url: http://localhost:3000
paths:
  /user:
    get:
      description: Returns a list of users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: user has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/{user_id}:
    get:
      description: Returns the user with the given ID
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: User data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: user with the give ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /order:
    get:
      description: Returns a list of orders
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of orders returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new order
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: order has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /order/{order_id}:
    get:
      description: Returns the order with the given ID
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: order data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order'
        '404':
          description: order with the give ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /product:
    get:
      description: Returns a list of products
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of products returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new product
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: product has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /product/{product_id}:
    get:
      description: Returns the product with the given ID
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: product data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: product with the give ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /transport:
    get:
      description: Returns a list of transports
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of transports returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transport'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new transport
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transport'
      responses:
        '201':
          description: transport has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transport'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /transport/{transport_id}:
    get:
      description: Returns the transport with the given ID
      parameters:
        - name: transport_id
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: transport data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transport'
        '404':
          description: transport with the give ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /storage:
    get:
      description: Returns a list of storages
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of storages returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Storage'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new storage
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Storage'
      responses:
        '201':
          description: storage has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Storage'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /storage/{storage_id}:
    get:
      description: Returns the storage with the given ID
      parameters:
        - name: storage_id
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: storage data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Storage'
        '404':
          description: storage with the give ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /bill:
    get:
      description: Returns a list of bills
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of bills returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bill'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new bill
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bill'
      responses:
        '201':
          description: bill has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /bill/{bill_id}:
    get:
      description: Returns the bill with the given ID
      parameters:
        - name: bill_id
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: bill data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
        '404':
          description: bill with the give ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      required:
        - email
      properties:
        first_name:
          type: string
        last_name:
          type: string
        birthDate:
          type: Date
        birthPlace:
          type: string
        email:
          type: string
        address:
          type: string
        active:
          type: boolean
        businessRelationship:
          type: string
        orders:
          type: Order[]
        password:
          type: string
        accessToken: 
          type: string
    Order:
      type: object
      required:
        - time
        - active
        - businessUser
      properties:
        time:
          type: Date
        comment:
          type: string
        active:
          type: boolean
        businessUser:
          type: User
        products:
          type: Product[]
        transport:
          type: Transport
    Product:
      type: object
      required:
        - name
        - price
        - available
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
        available:
          type: boolean
        storage:
          tpye: Storage
    Transport:
      type: object
      required:
        - place
        - trustMember
      properties:
        travelBy:
          type: string
        place:
          type: string
        trustMember:
          type: User
        products:
          type: Product[]
        startStorage:
          type: Storage
    Storage:
      type: object
      required:
        - name
        - place
        - opened
      properties:
        name:
          type: string
        place:
          type: string
        opened:
          type: boolean
        products:
          type: Product[]
    Bill:
      type: object
      required:
        - name
        - grandTotal
        - paid
        - customer
      properties:
        name:
          type: string
        grandTotal:
          type: number
        paid:
          type: boolean
        customer: 
          type: User
        products:
          type: Product[]
    Error:
      type: object
      required:
        - message
        - has_error
      properties:
        message:
          type: string
        has_error:
          type: boolean