{"version":3,"sources":["./src/app/areus-form/model/input-field.ts","./src/app/service/auth.service.ts","./src/app/pages/product-edit/product-edit.component.ts","./src/app/pages/product-edit/product-edit.component.html","./src/app/pages/users/users.component.ts","./src/app/pages/users/users.component.html","./src/environments/environment.ts","./src/app/common/table-contect/table-contect.component.ts","./src/app/common/table-contect/table-contect.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/storages/storages.component.ts","./src/app/pages/storages/storages.component.html","./src/app/pages/transport-edit/transport-edit.component.ts","./src/app/pages/transport-edit/transport-edit.component.html","./src/app/common/navigation/navigation.component.html","./src/app/common/navigation/navigation.component.ts","./src/app/service/config.service.ts","./src/app/areus-form/areus-form.module.ts","./src/app/areus-form/model/field-base.ts","./src/app/areus-form/service/form-generator.service.ts","./src/app/service/user.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/orders/orders.component.ts","./src/app/pages/orders/orders.component.html","./src/app/common/layoutside-nav/layoutside-nav.component.ts","./src/app/common/layoutside-nav/layoutside-nav.component.html","./src/app/areus-form/model/textarea-field.ts","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.component.html","./src/app/pages/bills/bills.component.ts","./src/app/pages/bills/bills.component.html","./src/app/service/bill.service.ts","./src/app/app.module.ts","./src/app/service/base.service.ts","./src/app/pages/user-edit/user-edit.component.ts","./src/app/pages/user-edit/user-edit.component.html","./src/app/pages/order-edit/order-edit.component.ts","./src/app/pages/order-edit/order-edit.component.html","./src/app/model/storage.ts","./src/app/areus-form/common/form/form.component.ts","./src/app/areus-form/common/form/form.component.html","./src/app/pages/products/products.component.ts","./src/app/pages/products/products.component.html","./src/app/pages/transports/transports.component.ts","./src/app/pages/transports/transports.component.html","./src/app/pages/storage-edit/storage-edit.component.ts","./src/app/pages/storage-edit/storage-edit.component.html","./src/app/service/order.service.ts","./src/app/model/user.ts","./src/app/model/bill.ts","./src/app/service/product.service.ts","./src/app/pages/bill-edit/bill-edit.component.ts","./src/app/pages/bill-edit/bill-edit.component.html","./src/app/model/product.ts","./src/app/model/order.ts","./src/app/areus-form/common/form-field/form-field.component.ts","./src/app/areus-form/common/form-field/form-field.component.html","./src/app/service/transport.service.ts","./src/app/app-routing.module.ts","./src/app/model/transport.ts","./src/app/service/storage.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { FieldBase } from \"./field-base\";\n\nexport class InputField extends FieldBase<string> {\n  controlType?: string = 'input';\n  type: string;\n\n  constructor(options: InputField) {\n    super(options);\n    this.type = options.type || 'text';\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { User } from '../model/user';\nimport { ConfigService } from './config.service';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  currentUserSubject$: BehaviorSubject<User | null> = new BehaviorSubject<User | null>(null)\n  lastToken: string = '';\n  loginURL: string = `${this.config.apiURL}login`\n  constructor(\n    private config: ConfigService,\n    private http: HttpClient,\n    private router: Router\n  ) { \n    if(localStorage.currentUser) {\n      const user: User = JSON.parse(localStorage.currentUser)\n      this.lastToken = user.accessToken || '';\n      this.currentUserSubject$.next(user)\n    }\n  }\n\n  login(loginData: User): Observable<User | null> {\n    return this.http.post<{user: User, accessToken: string}>(\n      this.loginURL,\n      loginData\n    ).pipe (\n      map( response => {\n        if(response.user && response.accessToken) {\n          this.lastToken  = response.accessToken;\n          response.user.accessToken = response.accessToken;\n          this.currentUserSubject$.next(response.user);\n          localStorage.currentUser = JSON.stringify(response.user)\n          return response.user;\n        }\n        return null;\n      })\n    )\n  }\n\n  logout(): void {\n    this.lastToken ='';\n    this.currentUserSubject$.next(null);\n    localStorage.removeItem('currentUser');\n    this.router.navigate(['/', 'login'])\n  }\n}\n","import { stringify } from '@angular/compiler/src/util';\nimport { Component, OnInit } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { FieldBase } from 'src/app/areus-form/model/field-base';\nimport { InputField } from 'src/app/areus-form/model/input-field';\nimport { TextareaField } from 'src/app/areus-form/model/textarea-field';\nimport { Product } from 'src/app/model/product';\nimport { Storage } from 'src/app/model/storage';\nimport { ProductService } from 'src/app/service/product.service';\n\n@Component({\n  selector: 'app-product-edit',\n  templateUrl: './product-edit.component.html',\n  styleUrls: ['./product-edit.component.scss']\n})\nexport class ProductEditComponent implements OnInit {\n\n  product$: Observable<Product> = this.ar.params.pipe(\n    switchMap (\n      params => this.productService.get(params.id)\n    )\n  )\n\n  product: Product = new Product();\n  fields: FieldBase<any>[] =[];\n  showForm: boolean = false;\n\n  constructor(\n    private productService: ProductService,\n    private ar: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.product$.subscribe(\n      product => {\n        this.product = product;\n        this.setForm();\n        this.showForm = true;  \n       \n      }\n    )\n  }\n\n  setForm(): void {\n    this.fields = [\n      new InputField({key: '_id', label:'', type: 'hidden', value: this.product._id as unknown as string }),\n      new InputField({key: 'name', label:'Name', type: 'text', value: this.product.name, \n      validators: [Validators.required, Validators.minLength(5), Validators.pattern(/^[A-Ű]{1}.*$/) ], errorMessage: 'Wrong product name. Please take a good name!' }),\n      new TextareaField({key: 'description', label:'Description', value: this.product.description as unknown as string}),\n      new InputField({key: 'price', label:'Price', type: 'number', value: this.product.price as unknown as string }),\n  \n    ]\n  }\n  onSave(product: Product): void {\n    this.productService.update(product).subscribe(\n      p => this.router.navigate(['/', 'products'])\n    )\n  }\n\n}\n","<h3>Edit Product</h3>\n<div class= \"row\" >\n    <div class=\"col-6 offset-3\">\n        <app-areus-form *ngIf= \"showForm\" [fieldList] =\"fields\" (submitted)= \"onSave($event)\"></app-areus-form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/model/user';\nimport { ConfigService, ITableColumn } from 'src/app/service/config.service';\nimport { UserService } from 'src/app/service/user.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  title = 'frontend-user';\n\n  users: Observable<User[]> = this.userService.getAll();\n\n  tableColumns: ITableColumn [] = this.config.userColumns;\n  list$: Observable<User[]> = this.userService.getAll();\n\n  constructor (\n    private userService : UserService,\n    private config: ConfigService,\n    private router: Router,\n  ) {}\n  ngOnInit(): void {\n  }\n\n  onSelectOne(user: User): void {\n    this.router.navigate(['/', 'users','edit', user._id])\n  }\n}\n","<div class=\"container-fluid px-4\">\n    <h1 class=\"mt-4\">Users</h1>\n    <app-table-contect\n        [tableColumns] = \"tableColumns\" \n        [list$] =\"list$\"\n        (selectOne)= \"onSelectOne($event)\">\n    </app-table-contect> \n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ConfigService, ITableColumn } from 'src/app/service/config.service';\nimport { UserService } from 'src/app/service/user.service';\n\n@Component({\n  selector: 'app-table-contect',\n  templateUrl: './table-contect.component.html',\n  styleUrls: ['./table-contect.component.scss']\n})\nexport class TableContectComponent<T extends {[propname: string]: any}> implements OnInit {\n\n  @Input() tableColumns: ITableColumn [] = [];\n  @Input() list$:  Observable<T[]> | null = null;\n\n  @Output() selectOne: EventEmitter<T> = new EventEmitter<T>();\n  \n  constructor (\n    private userService : UserService,\n    private config: ConfigService,\n  ) {}\n\n  ngOnInit(): void {\n  }\n\n  onSelect(entity: T): void {\n    this.selectOne.emit(entity)\n  } \n\n}\n","<div class=\"card mb-4\">\n    <div class=\"card-header\">\n        <i class=\"fas fa-table me-1\"></i>\n        List of Datas\n    </div>\n    <div class=\"card-body\">\n        <table class=\"table table-striped\">\n            <thead>\n                <tr>\n                    <th *ngFor= \"let col of tableColumns\">\n                        {{ col.title}}\n                    </th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tfoot>\n                <tr>\n                    <th *ngFor= \"let col of tableColumns\">\n                        {{ col.title}}\n                    </th>\n                    <th></th>\n                </tr>\n            </tfoot>\n            <tbody>\n                <tr *ngFor = \"let row of list$ | async\">\n                    <td *ngFor = \"let col of tableColumns\">\n                         <!-- {{ row[col.key]}} -->\n                       <span *ngIf= \"!col.outputTransform && !col.htmlOutput\">{{ row[col.key]}}</span> \n                       <span *ngIf= \"col.outputTransform\">{{ col.outputTransform(row[col.key])}}</span>\n                       <span *ngIf= \"col.htmlOutput\" [innerHTML]= \"col.htmlOutput(row[col.key])\" ></span>  \n                    </td>\n                    <td>\n                        <div class=\"btn-group\">\n                            <button (click) = \"onSelect(row)\" class=\"btn-info\">\n                                <i class=\"fas fa-pencil-alt\"></i>\n                            </button>\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { stringify } from '@angular/compiler/src/util';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/model/user';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { UserService } from 'src/app/service/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  user: User = new User();\n\n  constructor(\n    private userService: UserService,\n    private auth: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogin(): void {\n    this.auth.login(this.user).subscribe(\n      user => {\n        if(user) {\n          this.router.navigate(['/']);\n        }\n      }\n    )\n  }\n\n  setPassword(): void {\n    this.userService.update({_id: 1, email:'09dporkolabm@gmail.com', password:'test1234'})\n    .subscribe(resp => console.log(resp))\n  }\n\n}\n","<h1>Login page</h1>\n\n<div class=\"row\">\n    <div class=\"col-4 offset-4 mt-5\">\n        <form (ngSubmit)= \"onLogin()\">\n            <div class=\"form-group\">\n                <label for=\"email\"> Email</label>\n                <input class=\"form-control\" name= \"email\" [(ngModel)]= \"user.email\" type=\"email\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\"> Password</label>\n                <input class = \"form-control\" name= \"password\" [(ngModel)]= \"user.password\" type=\"password\">\n            </div>\n            <button type=\"submit\" class=\"btn btn-success col-12 mt-3\">\n                <i class=\"fas fa-save\"></i>\n            </button>\n            <button (click)= \"setPassword()\" class=\"btn btn-primary col-12 mt-3\">\n               Set password\n            </button>\n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { StorageService } from 'src/app/service/storage.service';\nimport { Storage } from 'src/app/model/storage';\nimport { ConfigService, ITableColumn } from 'src/app/service/config.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-storages',\n  templateUrl: './storages.component.html',\n  styleUrls: ['./storages.component.scss']\n})\nexport class StoragesComponent implements OnInit {\n\n  title = 'frontend-storage';\n\n  storages: Observable<Storage[]> = this.storageService.getAll();\n  tableColumns: ITableColumn [] = this.config.storageColumns;\n\n  list$: Observable<Storage[]> = this.storageService.getAll();\n  constructor (\n    private storageService : StorageService,\n    private config: ConfigService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n  }\n\n  \n  onSelectOne(storage: Storage): void {\n    this.router.navigate(['/', 'storages','edit', storage._id])\n  }\n\n}\n","<div class=\"container-fluid px-4\">\n    <h1 class=\"mt-4\">Storages</h1>\n    <app-table-contect \n        [tableColumns] = \"tableColumns\"\n        [list$] = \"list$\"\n        (selectOne)= \"onSelectOne($event)\">\n\n    </app-table-contect> \n</div>","import { Component, OnInit } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { FieldBase } from 'src/app/areus-form/model/field-base';\nimport { InputField } from 'src/app/areus-form/model/input-field';\nimport { TextareaField } from 'src/app/areus-form/model/textarea-field';\nimport { Transport } from 'src/app/model/transport';\nimport { TransportService } from 'src/app/service/transport.service';\n\n@Component({\n  selector: 'app-transport-edit',\n  templateUrl: './transport-edit.component.html',\n  styleUrls: ['./transport-edit.component.scss']\n})\nexport class TransportEditComponent implements OnInit {\n\n  transport$: Observable<Transport> = this.ar.params.pipe(\n    switchMap (\n      params => this.transportService.get(params.id)\n    )\n  )\n\n  transport: Transport = new Transport();\n  fields: FieldBase<any>[] =[];\n  showForm: boolean = false;\n\n  constructor(\n    private transportService: TransportService,\n    private ar: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.transport$.subscribe(\n      transport => {\n        this.transport = transport;\n        this.setForm();\n        this.showForm = true;  \n       \n      }\n    )\n  }\n\n  setForm(): void {\n    this.fields = [\n      new InputField({key: '_id', label:'', type: 'hidden', value: this.transport._id as unknown as string }),\n      new InputField({key: 'place', label:'Place', type: 'text', value: this.transport.place}), \n      new TextareaField({key: 'start', label:'startStorage', value: this.transport.startStorage as unknown as string}),\n      new InputField({key: 'travel', label:'Travel', type: 'text', value: this.transport.travelBy as unknown as string }),\n      new InputField({key: 'trust', label:'TrustMember', type: 'text', value: this.transport.trustMember as unknown as string }),\n    ]\n  }\n  onSave(transport: Transport): void {\n    this.transportService.update(transport).subscribe(\n      p => this.router.navigate(['/', 'transports'])\n    )\n  }\n\n}\n","<h3>Edit Transport</h3>\n<div class= \"row\" >\n    <div class=\"col-6 offset-3\">\n        <app-areus-form *ngIf= \"showForm\" [fieldList] =\"fields\" (submitted)= \"onSave($event)\"></app-areus-form>\n    </div>\n</div>","<nav class=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\n    <!-- Navbar Brand-->\n    <a class=\"navbar-brand ps-3\" href=\"index.html\">ERP System 2021</a>\n    <!-- Sidebar Toggle-->\n    <button class=\"btn btn-link btn-sm order-1 order-lg-0 me-4 me-lg-0\" id=\"sidebarToggle\" href=\"#!\"><i\n            class=\"fas fa-bars\"></i></button>\n    <!-- Navbar Search-->\n    <form class=\"d-none d-md-inline-block form-inline ms-auto me-0 me-md-3 my-2 my-md-0\">\n        <div class=\"input-group\">\n            <input class=\"form-control\" type=\"text\" placeholder=\"Search for...\" aria-label=\"Search for...\"\n                aria-describedby=\"btnNavbarSearch\" />\n            <button class=\"btn btn-primary\" id=\"btnNavbarSearch\" type=\"button\"><i class=\"fas fa-search\"></i></button>\n        </div>\n    </form>\n    <!-- Navbar-->\n    <ul class=\"navbar-nav ms-auto ms-md-0 me-3 me-lg-4\">\n        <li *ngIf= \"(user$ | async)\" class=\"nav-item dropdown\">\n            <a class=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\"\n                aria-expanded=\"false\"><i class=\"fas fa-user fa-fw\"></i></a>\n            <ul  class=\"dropdown-menu dropdown-menu-end\" aria-labelledby=\"navbarDropdown\">\n                <li><a class=\"dropdown-item\" (click)= \"onLogout()\">Logout</a></li>\n            </ul>\n        </li>\n        <button *ngIf= \"!(user$ | async)\" routerLink= \"/login\"  class=\"btn btn-success\">\n            <i class=\"fas fa-sign-in-alt\"></i>\n        </button>\n    </ul>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { User } from 'src/app/model/user';\nimport { AuthService } from 'src/app/service/auth.service';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent implements OnInit {\n\n  user$: BehaviorSubject<User | null> = this.auth.currentUserSubject$;\n  constructor(\n    private auth: AuthService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogout(): void {\n    this.auth.logout();\n  }\n}\n","import { CurrencyPipe } from '@angular/common';\nimport { Injectable } from '@angular/core';\n\nexport interface ITableColumn {\n title: string;\n key: string;\n hidden? : boolean;\n outputTransform?: any; \n htmlOutput?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  public readonly apiURL: string = 'http://localhost:3000/';\n\n  userColumns: ITableColumn[] = [\n    { key: \"_id\", title: \"#\" }, \n    { key: \"first_name\", title: \"First Name\" }, \n    { key: \"last_name\", title: \"Last Name\" },\n    { key: \"birthDate\", title: \"Birthday\"  },\n    { key: \"birthPlace\", title: \"Birthplace\" },\n    { key: \"email\", title: \"Email Address\" },\n    { key: \"address\", title: \"Street Address\" }, \n    { key: \"active\", title: \"Active\", htmlOutput: ConfigService.activeSign },\n    { key: \"businessRelationship\", title: \"Business Relationship\" }, \n    { key: \"orders\", title: \"Orders\" }\n  ];\n\n  productColumns: ITableColumn[] = [\n    { key: \"_id\", title: \"#\" }, \n    { key: \"name\", title: \"Product Name\" }, \n    { key: \"description\", title: \"Description\" },\n    { key: \"price\", title: \"Price\", outputTransform: (v: number) => `${v} Ft` },\n    { key: \"available\", title: \"Available\",  htmlOutput: ConfigService.activeSign},\n    { key: \"storage\", title: \"Storage\" }, \n    \n  ];\n\n  billColumns: ITableColumn[] = [\n    { key: \"_id\", title: \"#\" }, \n    { key: \"name\", title: \"Bill Identify\" }, \n    { key: \"grandTotal\", title: \"Grand Total\", outputTransform: (v: number) => `${v} Ft`  },\n    { key: \"paid\", title: \"Paid\", htmlOutput: ConfigService.activeSign  },\n    { key: \"customer\", title: \"Customer\" },\n    { key: \"products\", title: \"Products\" }, \n    \n  ];\n\n  orderColumns: ITableColumn[] = [\n    { key: \"_id\", title: \"#\" }, \n    { key: \"time\", title: \"Time of Order\" }, \n    { key: \"comment\", title: \"Comment\" },\n    { key: \"active\", title: \"Active\", htmlOutput: ConfigService.activeSign  },\n    { key: \"businessUser\", title: \"Business User\" },\n    { key: \"transport\", title: \"Transport\" }, \n    \n  ];\n\n  storageColumns: ITableColumn[] = [\n    { key: \"_id\", title: \"#\" }, \n    { key: \"name\", title: \"Storage Name\" }, \n    { key: \"place\", title: \"Place\" },\n    { key: \"opened\", title: \"Opened\" , htmlOutput: ConfigService.activeSign },\n    { key: \"products\", title: \"Products\" }, \n    \n  ];\n\n  transportColumns: ITableColumn[] = [\n    { key: \"_id\", title: \"#\" }, \n    { key: \"travelBy\", title: \"Vehicle\" }, \n    { key: \"place\", title: \"Destination Place\" },\n    { key: \"trustMember\", title: \"Responsible People\"  },\n    { key: \"products\", title: \"Products\" }, \n    { key: \"startStorage\", title: \"Start Storage\" }\n    \n  ];\n  constructor() { }\n\n  static activeSign(sign: boolean) : string {\n    const icon: string = sign ? 'fa-check' : 'fa-ban';\n    return `<i class= \"fas ${icon}\"></i>`; \n  } \n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormComponent } from './common/form/form.component';\nimport { FormFieldComponent } from './common/form-field/form-field.component';\n\n\n\n@NgModule({\n  declarations: [\n    FormComponent,\n    FormFieldComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    FormComponent,\n  ]\n})\nexport class AreusFormModule { }\n","import { ValidatorFn } from \"@angular/forms\";\n\nexport class FieldBase<T> {\n  value: T;\n  key: string;\n  label: string;\n  type?: string;\n  options?: {value: string, label: string}[];\n  validators?: ValidatorFn[];\n  controlType?: string;\n  errorMessage?: string;\n\n  constructor(options: FieldBase<T>) {\n    this.value = options.value;\n    this.key = options.key;\n    this.label = options.label;\n    this.validators = options.validators;\n    this.controlType = options.controlType;\n    this.errorMessage = options.errorMessage;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EmailValidator, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AreusFormModule } from '../areus-form.module';\nimport { FieldBase } from '../model/field-base';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormGeneratorService {\n\n  constructor() { }\n\n  toFormGroup(fieldList: FieldBase<any>[]): FormGroup {\n    const group: {[propname: string]: any} = {};\n\n    if (fieldList) {\n      fieldList.forEach( item => {\n        group[item.key] = new FormControl(item.value, item.validators || []);\n      });\n    }\n\n    return new FormGroup(group);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from '../model/user';\nimport { BaseService } from './base.service';\nimport { ConfigService } from './config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService extends BaseService<User>{\n\n  constructor(\n    public http: HttpClient,\n    public config: ConfigService,\n  ) { \n    super(http, config);\n    this.entity = 'users';\n  }\n}\n","import { Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from './model/user';\r\nimport { UserService } from './service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'frontend';\r\n\r\n  users: Observable<User[]> = this.userService.getAll();\r\n\r\n  constructor (\r\n    private userService : UserService,\r\n  ) {}\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<!-- <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n        <meta name=\"description\" content=\"\" />\r\n        <meta name=\"author\" content=\"\" />\r\n        <title>Sidenav dark - SB Admin</title>\r\n        <link href=\"css/styles.css\" rel=\"stylesheet\" />\r\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/js/all.min.js\" crossorigin=\"anonymous\"></script>\r\n    </head> -->\r\n<app-navigation></app-navigation>\r\n\r\n<div id=\"layoutSidenav\">\r\n    <app-layoutside-nav></app-layoutside-nav>\r\n    <div id=\"layoutSidenav_content\">\r\n        <main>\r\n           <router-outlet></router-outlet>\r\n        </main>\r\n        <footer class=\"py-4 bg-dark mt-auto\">\r\n            <div class=\"container-fluid px-4\">\r\n                <div class=\"d-flex align-items-center justify-content-between small\">\r\n                    <div class=\"text-muted\">Copyright &copy; ERP Admin Website 2021</div>\r\n                    <div>\r\n                        <a href=\"#\">Privacy Policy</a>\r\n                        &middot;\r\n                        <a href=\"#\">Terms &amp; Conditions</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Order } from 'src/app/model/order';\nimport { ConfigService, ITableColumn } from 'src/app/service/config.service';\nimport { OrderService } from 'src/app/service/order.service';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.scss']\n})\nexport class OrdersComponent implements OnInit {\n\n  title = 'frontend-order';\n\n  orders: Observable<Order[]> = this.orderService.getAll();\n  tableColumns: ITableColumn [] = this.config.orderColumns;\n\n  list$: Observable<Order[]> = this.orderService.getAll();\n\n  constructor (\n    private orderService : OrderService,\n    private config : ConfigService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n  }\n\n  onSelectOne(order: Order): void {\n    this.router.navigate(['/', 'orders','edit', order._id])\n  }\n}\n","<div class=\"container-fluid px-4\">\n    <h1 class=\"mt-4\">Orders</h1>\n    <app-table-contect \n        [tableColumns] = \"tableColumns\"\n        [list$] = \"list$\"\n        (selectOne)= \"onSelectOne($event)\">>\n    </app-table-contect> \n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layoutside-nav',\n  templateUrl: './layoutside-nav.component.html',\n  styleUrls: ['./layoutside-nav.component.scss']\n})\nexport class LayoutsideNavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"layoutSidenav_nav\">\n    <nav class=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\">\n        <div class=\"sb-sidenav-menu\">\n            <div class=\"nav\">\n                <div class=\"sb-sidenav-menu-heading\">Home and statistics</div>\n                <a class=\"nav-link\" routerLink=\"/\">\n                    <div class=\"sb-nav-link-icon\"><i class=\"fas fa-tachometer-alt\"></i></div>\n                    Dashboard\n                </a>\n\n                <div class=\"sb-sidenav-menu-heading\">Information about our Company</div>\n                <a class=\"nav-link\" routerLink=\"/users\">\n                    <div class=\"sb-nav-link-icon\"><i class=\"fas fa-user-tie\"></i></div>\n                    Users\n                </a>\n                <a class=\"nav-link\" routerLink=\"/products\">\n                    <div class=\"sb-nav-link-icon\"><i class=\"fas fa-chart-area\"></i></div>\n                    Products\n                </a>\n                <a class=\"nav-link\" routerLink=\"/storages\">\n                    <div class=\"sb-nav-link-icon\"><i class=\"fas fa-warehouse\"></i></div>\n                    Storages\n                </a>\n                <a class=\"nav-link\" routerLink=\"/orders\">\n                    <div class=\"sb-nav-link-icon\"><i class=\"fas fa-shopping-cart\"></i></div>\n                    Orders\n                </a>\n                <a class=\"nav-link\" routerLink=\"/transports\">\n                    <div class=\"sb-nav-link-icon\"><i class=\"fas fa-dolly\"></i></div>\n                    Transports\n                </a>\n                <a class=\"nav-link\" routerLink=\"/bills\">\n                    <div class=\"sb-nav-link-icon\"><i class=\"fas fa-file-invoice\"></i></div>\n                    Bills\n                </a>\n\n            </div>\n        </div>\n        <div class=\"sb-sidenav-footer\">\n            <div class=\"small\">Logged in as:</div>\n            ERP System Website\n        </div>\n    </nav>\n</div>","import { FieldBase } from \"./field-base\";\n\nexport class TextareaField extends FieldBase<string> {\n  controlType?: string = 'textarea';\n\n  constructor(options: TextareaField) {\n    super(options);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1\" crossorigin=\"anonymous\">\n  </head>\n  <body>\n    <div class=\"container-fluid px-4\">\n\n        <h1 class=\"mt-4\">Vállalatirányítási rendszer kezdőoldala</h1>\n        <ol class=\"breadcrumb mb-4\">\n            <li class=\"breadcrumb-item\"><a href=\"index.html\">Dashboard</a></li>\n            <li class=\"breadcrumb-item active\">Vállalatirányításirendszer kezdőoldala</li>\n        </ol>\n        <div class=\"card mb-4\">\n            <div class=\"card-body\">\n                Ez a webes alkalmazás egy vállalatirányítási rendszernek a lehetőségeit mutatja be a felhasználó számára. Egy vállalatnak az irányításához szükséges erőforrások, termékek, raktárak, üzleti partnerek, megrendelések, számlák, vevők adatainak nyilvántartását tárja elénk egy könnyen kezelhető adminisztrációs felülettel. \n            </div>\n        </div>\n\n      </div>\n    <header>\n      <div id=\"indexCarousel\" class=\"carousel slide\" data-bs-ride=\"carousel\">\n        <ol class=\"carousel-indicators\">\n          <li data-bs-target=\"#indexCarousel\" data-bs-slide-to=\"0\" class=\"active\"></li>\n          <li data-bs-target=\"#indexCarousel\" data-bs-slide-to=\"1\"></li>\n          <li data-bs-target=\"#indexCarousel\" data-bs-slide-to=\"2\"></li>\n        </ol>\n        <div class=\"carousel-inner\">\n          <div class=\"carousel-item active\">\n            <img src=\"/src/assets/img/first_picture.jpg\" class=\"d-block w-100\" alt=\"ERP-01\">\n            <div class=\"carousel-caption d-none d-md-block bg-dark p-2\">\n              <h5>ERP1</h5>\n              <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. \n                Impedit odit numquam officia! Dicta dolor eius sit laboriosam aspernatur iure saepe! \n                Veritatis quis officia aliquam. Cumque expedita reiciendis aliquam facilis optio?</p>\n            </div>\n          </div>\n          <div class=\"carousel-item\">\n            <img src=\"/src/assets/img/second_erp.jpg\" class=\"d-block w-100\" alt=\"ERP-02\">\n            <div class=\"carousel-caption d-none d-md-block bg-dark p-2\">\n              <h5>ERP2</h5>\n              <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. \n                Asperiores, dolorem vitae facilis, officia non aspernatur tempore temporibus et laboriosam nulla, eius ipsam cumque delectus voluptate debitis nesciunt nisi! \n                Ratione, consequatur?</p>\n            </div>\n          </div>\n          <div class=\"carousel-item\">\n            <img src=\"/src/assets/img/third_pick.jpg\" class=\"d-block w-100\" alt=\"ERP-03\">\n            <div class=\"carousel-caption d-none d-md-block bg-dark p-2\">\n              <h5>ERP3</h5>\n              <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. \n                Iure, doloribus. \n                Recusandae, quo odit ipsam fugiat labore aliquam esse voluptatibus tenetur sed qui maiores delectus quisquam ad error laboriosam porro culpa!</p>\n            </div>\n          </div>\n        </div>\n        <a class=\"carousel-control-prev\" href=\"#indexCarousel\" role=\"button\" data-bs-slide=\"prev\">\n          <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n          <span class=\"visually-hidden\">Előző</span>\n        </a>\n        <a class=\"carousel-control-next\" href=\"#indexCarousel\" role=\"button\" data-bs-slide=\"next\">\n          <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n          <span class=\"visually-hidden\">Következő</span>\n        </a>\n      </div>\n    </header>\n    \n      \n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW\" crossorigin=\"anonymous\"></script>\n      <script>\n        $('#indexCarousel').carousel({\n          intervel: 5000\n        })\n      </script>\n  </body>\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Bill } from 'src/app/model/bill';\nimport { BillService } from 'src/app/service/bill.service';\nimport { ConfigService, ITableColumn } from 'src/app/service/config.service';\n\n@Component({\n  selector: 'app-bills',\n  templateUrl: './bills.component.html',\n  styleUrls: ['./bills.component.scss']\n})\nexport class BillsComponent implements OnInit {\n\n  title = 'frontend-bill';\n\n  bills: Observable<Bill[]> = this.billService.getAll();\n  tableColumns: ITableColumn [] = this.config.billColumns;\n\n  list$: Observable<Bill[]> = this.billService.getAll();\n\n  constructor (\n    private billService : BillService,\n    private config: ConfigService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n  }\n\n  onSelectOne(bill: Bill): void {\n    this.router.navigate(['/', 'bills','edit', bill._id])\n  }\n\n}\n","<div class=\"container-fluid px-4\">\n    <h1 class=\"mt-4\">Bills</h1>\n    <app-table-contect \n        [tableColumns] = \"tableColumns\"\n        [list$] =\"list$\"\n        (selectOne)= \"onSelectOne($event)\">\n    </app-table-contect> \n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Bill } from '../model/bill';\nimport { BaseService } from './base.service';\nimport { ConfigService } from './config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BillService extends BaseService<Bill>{\n\n  constructor(\n    public http: HttpClient,\n    public config: ConfigService,\n  ) { \n    super(http, config);\n    this.entity = 'bills';\n  }\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from  '@angular/common/http';\nimport { FormsModule } from '@angular/forms'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BaseService } from './service/base.service';\nimport { NavigationComponent } from './common/navigation/navigation.component';\nimport { LayoutsideNavComponent } from './common/layoutside-nav/layoutside-nav.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { UsersComponent } from './pages/users/users.component';\nimport { ProductsComponent } from './pages/products/products.component';\nimport { BillsComponent } from './pages/bills/bills.component';\nimport { OrdersComponent } from './pages/orders/orders.component';\nimport { StoragesComponent } from './pages/storages/storages.component';\nimport { TransportsComponent } from './pages/transports/transports.component';\nimport { TableContectComponent } from './common/table-contect/table-contect.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { ProductEditComponent } from './pages/product-edit/product-edit.component';\nimport { AreusFormModule } from './areus-form/areus-form.module';\nimport { UserEditComponent } from './pages/user-edit/user-edit.component';\nimport { BillEditComponent } from './pages/bill-edit/bill-edit.component';\nimport { StorageEditComponent } from './pages/storage-edit/storage-edit.component';\nimport { OrderEditComponent } from './pages/order-edit/order-edit.component';\nimport { TransportEditComponent } from './pages/transport-edit/transport-edit.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    LayoutsideNavComponent,\n    DashboardComponent,\n    UsersComponent,\n    ProductsComponent,\n    BillsComponent,\n    OrdersComponent,\n    StoragesComponent,\n    TransportsComponent,\n    TableContectComponent,\n    LoginComponent,\n    ProductEditComponent,\n    UserEditComponent,\n    BillEditComponent,\n    StorageEditComponent,\n    OrderEditComponent,\n    TransportEditComponent,\n    ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    AreusFormModule,\n  ],\n  providers: [BaseService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ConfigService } from './config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BaseService<T extends {active?: boolean, _id?: number, price?: number}>{\r\n\r\n  entity: string = \"\";\r\n  constructor(\r\n    public http: HttpClient,\r\n    public config: ConfigService,\r\n  ) { }\r\n\r\n  getAll(): Observable<T[]> {\r\n    return this.http.get<T[]>(`${this.config.apiURL}${this.entity}`);\r\n  }\r\n\r\n  get(_id:string): Observable<T> {\r\n    return this.http.get<T>(`${this.config.apiURL}${this.entity}/${_id}`);\r\n  }\r\n\r\n  create(entity: T): Observable<T> {\r\n    return this.http.post<T>(`${this.config.apiURL}${this.entity}`, entity)\r\n  }\r\n\r\n  update(entity: T): Observable<T> {\r\n    return this.http.patch<T>(`${this.config.apiURL}${this.entity}/${entity._id}`, entity)\r\n  }\r\n\r\n  remove(_id: string): Observable<T> {\r\n    return this.http.delete<T>(`${this.config.apiURL}${this.entity}/${_id}`)\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { FieldBase } from 'src/app/areus-form/model/field-base';\nimport { InputField } from 'src/app/areus-form/model/input-field';\nimport { TextareaField } from 'src/app/areus-form/model/textarea-field';\nimport { User } from 'src/app/model/user';\nimport { UserService } from 'src/app/service/user.service';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.scss']\n})\nexport class UserEditComponent implements OnInit {\n\n  user$: Observable<User> = this.ar.params.pipe(\n    switchMap (\n      params => this.userService.get(params.id)\n    )\n  )\n\n  user: User = new User();\n  fields: FieldBase<any>[] =[];\n  showForm: boolean = false;\n\n  constructor(\n    private userService: UserService,\n    private ar: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.user$.subscribe(\n      user => {\n        this.user = user;\n        this.setForm();\n        this.showForm = true;  \n       \n      }\n    )\n  }\n\n  setForm(): void {\n    this.fields = [\n      new InputField({key: '_id', label:'', type: 'hidden', value: this.user._id as unknown as string }),\n      new InputField({key: 'first_name', label:'First Name', type: 'text', value: this.user.first_name as unknown as string, \n      validators: [Validators.required, Validators.minLength(5), Validators.pattern(/^[A-Ű]{1}.*$/) ], errorMessage: 'Wrong user first name. Please take a good name!' }),\n      new InputField({key: 'last_name', label:' Last Name', type: 'text', value: this.user.first_name as unknown as string, \n      validators: [Validators.required, Validators.minLength(5), Validators.pattern(/^[A-Ű]{1}.*$/) ], errorMessage: 'Wrong user first name. Please take a good name!' }),\n      new InputField({key: 'email', label:'Email', type: 'email', value: this.user.email as unknown as string }),\n      new InputField({key: 'address', label:'Address', type: 'text', value: this.user.address  as unknown as string}),\n    ]\n  }\n  onSave(user: User): void {\n    this.userService.update(user).subscribe(\n      u => this.router.navigate(['/', 'users'])\n    )\n  }\n\n}\n","<h3>User Product</h3>\n<div class= \"row\" >\n    <div class=\"col-6 offset-3\">\n        <app-areus-form *ngIf= \"showForm\" [fieldList] =\"fields\" (submitted)= \"onSave($event)\"></app-areus-form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { FieldBase } from 'src/app/areus-form/model/field-base';\nimport { InputField } from 'src/app/areus-form/model/input-field';\nimport { TextareaField } from 'src/app/areus-form/model/textarea-field';\nimport { Order } from 'src/app/model/order';\nimport { OrderService } from 'src/app/service/order.service';\n\n@Component({\n  selector: 'app-order-edit',\n  templateUrl: './order-edit.component.html',\n  styleUrls: ['./order-edit.component.scss']\n})\nexport class OrderEditComponent implements OnInit {\n\n  order$: Observable<Order> = this.ar.params.pipe(\n    switchMap (\n      params => this.orderService.get(params.id)\n    )\n  )\n\n  order: Order = new Order();\n  fields: FieldBase<any>[] =[];\n  showForm: boolean = false;\n\n  constructor(\n    private orderService: OrderService,\n    private ar: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.order$.subscribe(\n      order => {\n        this.order = order;\n        this.setForm();\n        this.showForm = true;  \n       \n      }\n    )\n  }\n\n  setForm(): void {\n    this.fields = [\n      new InputField({key: '_id', label:'', type: 'hidden', value: this.order._id as unknown as string }),\n      new InputField({key: 'time', label:'Time', type: 'time', value: this.order.time as unknown as string}),\n      new TextareaField({key: 'comment', label:'Comment', value: this.order.comment as unknown as string }),\n  \n    ]\n  }\n  onSave(order: Order): void {\n    this.orderService.update(order).subscribe(\n      p => this.router.navigate(['/', 'orders'])\n    )\n  }\n\n}\n","<h3>Edit Order</h3>\n<div class= \"row\" >\n    <div class=\"col-6 offset-3\">\n        <app-areus-form *ngIf= \"showForm\" [fieldList] =\"fields\" (submitted)= \"onSave($event)\"></app-areus-form>\n    </div>\n</div>\n\n","import { Product } from \"./product\";\n\nexport class Storage{\n\n    _id: number =0;\n    name: string = \"\";\n    place: string = \"\";\n    opened: boolean = true;\n    products?: Product[] = [];\n\n}\n\n\n\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FieldBase } from '../../model/field-base';\nimport { FormGeneratorService } from '../../service/form-generator.service';\n\n@Component({\n  selector: 'app-areus-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss']\n})\nexport class FormComponent implements OnInit {\n\n  @Input() fieldList: FieldBase<any>[] = [];\n  @Output() submitted: EventEmitter<any> = new EventEmitter();\n  formGroup: FormGroup = new FormGroup({});\n\n  constructor(\n    private generator: FormGeneratorService,\n  ) { }\n\n  ngOnInit(): void {\n    this.formGroup = this.generator.toFormGroup(this.fieldList);\n  }\n\n  onSubmit(): void {\n    this.submitted.emit(this.formGroup.value);\n  }\n\n}\n","<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"formGroup\">\n  <app-form-field\n    *ngFor=\"let field of fieldList\"\n    [formGroup]=\"formGroup\"\n    [field]=\"field\"\n  ></app-form-field>\n  <div class=\"d-grid\">\n    <button type=\"submit\" [disabled]=\"formGroup.invalid\" class=\"btn btn-primary mt-3 mt-3\">\n      Send\n    </button>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Product } from 'src/app/model/product';\nimport { ConfigService, ITableColumn } from 'src/app/service/config.service';\nimport { ProductService } from 'src/app/service/product.service';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n\n  title = 'frontend-product';\n\n  products: Observable<Product[]> = this.productService.getAll();\n  tableColumns: ITableColumn [] = this.config.productColumns;\n\n  list$: Observable<Product[]> = this.productService.getAll();\n\n  constructor (\n    private productService : ProductService,\n    private config : ConfigService,\n    private router: Router,\n  ) {}\n\n  ngOnInit(): void {\n  }\n\n  onSelectOne(product: Product): void {\n    this.router.navigate(['/', 'products','edit', product._id])\n  }\n\n}\n","<div class=\"container-fluid px-4\">\n    <h1 class=\"mt-4\">Products</h1>\n    <app-table-contect \n        [tableColumns] = \"tableColumns\"\n        [list$] =\"list$\"\n        (selectOne)= \"onSelectOne($event)\">\n    </app-table-contect> \n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Transport } from 'src/app/model/transport';\nimport { ConfigService, ITableColumn } from 'src/app/service/config.service';\nimport { TransportService } from 'src/app/service/transport.service';\n\n@Component({\n  selector: 'app-transports',\n  templateUrl: './transports.component.html',\n  styleUrls: ['./transports.component.scss']\n})\nexport class TransportsComponent implements OnInit {\n\n  title = 'frontend-transport';\n\n  transports: Observable<Transport[]> = this.transportService.getAll();\n\n  tableColumns: ITableColumn [] = this.config.transportColumns;\n\n  list$: Observable<Transport[]> = this.transportService.getAll();\n\n  constructor (\n    private transportService : TransportService,\n    private config : ConfigService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n  }\n\n  onSelectOne(transport: Transport): void {\n    this.router.navigate(['/', 'transports','edit', transport._id])\n  }\n}\n","<div class=\"container-fluid px-4\">\n    <h1 class=\"mt-4\">Transports</h1>\n    <app-table-contect \n    [tableColumns] = \"tableColumns\"\n    [list$] =\"list$\"\n    (selectOne)= \"onSelectOne($event)\">\n</app-table-contect> \n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { FieldBase } from 'src/app/areus-form/model/field-base';\nimport { InputField } from 'src/app/areus-form/model/input-field';\nimport { Storage } from 'src/app/model/storage';\nimport { StorageService } from 'src/app/service/storage.service';\n\n@Component({\n  selector: 'app-storage-edit',\n  templateUrl: './storage-edit.component.html',\n  styleUrls: ['./storage-edit.component.scss']\n})\nexport class StorageEditComponent implements OnInit {\n\n  storage$: Observable<Storage> = this.ar.params.pipe(\n    switchMap (\n      params => this.storageService.get(params.id)\n    )\n  )\n\n  storage: Storage = new Storage();\n  fields: FieldBase<any>[] =[];\n  showForm: boolean = false;\n\n  constructor(\n    private storageService: StorageService,\n    private ar: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.storage$.subscribe(\n      storage => {\n        this.storage = storage;\n        this.setForm();\n        this.showForm = true;  \n       \n      }\n    )\n  }\n\n  setForm(): void {\n    this.fields = [\n      new InputField({key: '_id', label:'', type: 'hidden', value: this.storage._id as unknown as string }),\n      new InputField({key: 'name', label:'Name', type: 'text', value: this.storage.name}), \n      new InputField({key: 'place', label:'Place', type: 'text', value: this.storage.place as unknown as string }),\n  \n    ]\n  }\n  onSave(storage: Storage): void {\n    this.storageService.update(storage).subscribe(\n      p => this.router.navigate(['/', 'storages'])\n    )\n  }\n}\n","<h3>Edit Storage</h3>\n<div class= \"row\" >\n    <div class=\"col-6 offset-3\">\n        <app-areus-form *ngIf= \"showForm\" [fieldList] =\"fields\" (submitted)= \"onSave($event)\"></app-areus-form>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Order } from '../model/order';\nimport { BaseService } from './base.service';\nimport { ConfigService } from './config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService extends BaseService<Order>{\n\n  constructor(\n    public http: HttpClient,\n    public config: ConfigService,\n  ) { \n    super(http, config);\n    this.entity = 'orders';\n  }\n}","import { Order } from \"./order\";\n\nexport class User {\n\n    _id: number = 0;\n    first_name?: string = \"\";\n    last_name?: string = \"\";\n    birthDate?: Date = new Date();\n    birthPlace?: string =\"\";\n    email: string = \"\";\n    address?: string = \"\";\n    active?: boolean = true;\n    businessRelationship?: string = \"\";\n    orders?: Order[] = [];\n    password?: string='';\n    accessToken?: string ='';\n}\n","import { Product } from \"./product\";\nimport { User } from \"./user\";\n\nexport class Bill {\n\n    _id: number = 0;\n    name: string = \"\";\n    grandTotal: number = 0;\n    paid: boolean = false;\n    customer: User =  new User();\n    products?: Product[] = [];\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Product } from '../model/product';\nimport { BaseService } from './base.service';\nimport { ConfigService } from './config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService extends BaseService<Product>{\n\n  constructor(\n    public http: HttpClient,\n    public config: ConfigService,\n  ) { \n    super(http, config);\n    this.entity = 'products';\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { FieldBase } from 'src/app/areus-form/model/field-base';\nimport { InputField } from 'src/app/areus-form/model/input-field';\nimport { Bill } from 'src/app/model/bill';\nimport { BillService } from 'src/app/service/bill.service';\n\n@Component({\n  selector: 'app-bill-edit',\n  templateUrl: './bill-edit.component.html',\n  styleUrls: ['./bill-edit.component.scss']\n})\nexport class BillEditComponent implements OnInit {\n\n  bill$: Observable<Bill> = this.ar.params.pipe(\n    switchMap (\n      params => this.billService.get(params.id)\n    )\n  )\n\n  bill: Bill = new Bill();\n  fields: FieldBase<any>[] =[];\n  showForm: boolean = false;\n\n  constructor(\n    private billService: BillService,\n    private ar: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.bill$.subscribe(\n      bill => {\n        this.bill = bill;\n        this.setForm();\n        this.showForm = true;  \n       \n      }\n    )\n  }\n\n  setForm(): void {\n    this.fields = [\n      new InputField({key: '_id', label:'', type: 'hidden', value: this.bill._id as unknown as string }),\n      new InputField({key: 'name', label:'Name', type: 'text', value: this.bill.name}), \n      new InputField({key: 'customer', label:'Customer', type: 'text', value: this.bill.customer as unknown as string}),\n      new InputField({key: 'grand', label:'GrandTotal', type: 'number', value: this.bill.grandTotal as unknown as string }),\n  \n    ]\n  }\n  onSave(bill: Bill): void {\n    this.billService.update(bill).subscribe(\n      p => this.router.navigate(['/', 'bills'])\n    )\n  }\n\n}\n","<h3>Edit Bill</h3>\n<div class= \"row\" >\n    <div class=\"col-6 offset-3\">\n        <app-areus-form *ngIf= \"showForm\" [fieldList] =\"fields\" (submitted)= \"onSave($event)\"></app-areus-form>\n    </div>\n</div>\n","export class Product {\n\n    _id: number =0;\n    name: string = \"\";\n    description?: string =\"\";\n    price: number = 0;\n    available: boolean = false;\n    storage?: Storage =  new Storage();\n}\n","import { Product } from \"./product\";\nimport { Transport } from \"./transport\";\nimport { User } from \"./user\";\n\n\nexport class Order {\n\n    _id: number =0;\n    time: Date = new Date();\n    comment?: string = \"\";\n    active: boolean = false;\n    businessUser: User =  new User();\n    products?: Product[] = [];\n    transport?: Transport = new Transport();\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FieldBase } from '../../model/field-base';\n\n@Component({\n  selector: 'app-form-field',\n  templateUrl: './form-field.component.html',\n  styleUrls: ['./form-field.component.scss']\n})\nexport class FormFieldComponent implements OnInit {\n\n  @Input() field: FieldBase<any> = new FieldBase({key: '', label: '', value: ''});\n  @Input() formGroup: FormGroup = new FormGroup({});\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  get isValid(): boolean {\n    const control = this.formGroup.controls[this.field.key];\n    return control.valid || control.untouched;\n  }\n\n}\n","<div [formGroup]=\"formGroup\" class=\"form-group mt-1\">\n  <label [attr.for]=\"field.key\">{{ field.label }}</label>\n  <div [ngSwitch]=\"field.controlType\">\n    <input\n      *ngSwitchCase=\"'input'\"\n      [type]=\"field.type\"\n      [formControlName]=\"field.key\"\n      [id]=\"field.key\"\n      class=\"form-control\">\n    <select\n      *ngSwitchCase=\"'select'\"\n      [formControlName]=\"field.key\"\n      [id]=\"field.key\"\n      class=\"form-control\">\n        <option *ngFor=\"let option of field.options\" [value]=\"option.value\">\n          {{ option.label }}\n        </option>\n    </select>\n    <textarea\n      *ngSwitchCase=\"'textarea'\"\n      [formControlName]=\"field.key\"\n      [id]=\"field.key\"\n      class=\"form-control\"\n      cols=\"30\" rows=\"10\">\n    </textarea>\n    <div *ngIf=\"!isValid\" class=\"error-message\">\n      {{ field.errorMessage || 'Invalid value.' }}\n    </div>\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Transport } from '../model/transport';\nimport { BaseService } from './base.service';\nimport { ConfigService } from './config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransportService extends BaseService<Transport>{\n\n  constructor(\n    public http: HttpClient,\n    public config: ConfigService,\n  ) { \n    super(http, config);\n    this.entity = 'transports';\n  }\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Order } from './model/order';\nimport { BillEditComponent } from './pages/bill-edit/bill-edit.component';\nimport { BillsComponent } from './pages/bills/bills.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { OrderEditComponent } from './pages/order-edit/order-edit.component';\nimport { OrdersComponent } from './pages/orders/orders.component';\nimport { ProductEditComponent } from './pages/product-edit/product-edit.component';\nimport { ProductsComponent } from './pages/products/products.component';\nimport { StorageEditComponent } from './pages/storage-edit/storage-edit.component';\nimport { StoragesComponent } from './pages/storages/storages.component';\nimport { TransportEditComponent } from './pages/transport-edit/transport-edit.component';\nimport { TransportsComponent } from './pages/transports/transports.component';\nimport { UserEditComponent } from './pages/user-edit/user-edit.component';\nimport { UsersComponent } from './pages/users/users.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', \n    component: DashboardComponent,\n  },\n  {\n    path: 'users', \n    component: UsersComponent,\n  },\n  {\n    path: 'users/edit/:id', \n    component: UserEditComponent,\n  },\n  {\n    path: 'bills', \n    component: BillsComponent,\n  },\n  {\n    path: 'bills/edit/:id', \n    component: BillEditComponent,\n  },\n  {\n    path: 'products', \n    component: ProductsComponent,\n  },\n  {\n    path: 'products/edit/:id', \n    component: ProductEditComponent,\n  },\n  {\n    path: 'storages', \n    component: StoragesComponent,\n  },\n  {\n    path: 'storages/edit/:id', \n    component: StorageEditComponent,\n  },\n  {\n    path: 'transports', \n    component: TransportsComponent,\n  },\n  {\n    path: 'transports/edit/:id', \n    component: TransportEditComponent,\n  },\n  {\n    path: 'orders', \n    component: OrdersComponent,\n  },\n  {\n    path: 'orders/edit/:id', \n    component: OrderEditComponent,\n  },\n  {\n    path: 'login', \n    component: LoginComponent,\n  },\n  {\n    path: '**',\n    redirectTo: '',\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { User } from \"./user\";\nimport { Product } from \"./product\";\n\nexport class Transport {\n\n    _id: number =0 ;\n    travelBy?: string =\"\";\n    place: string =\"\" ; //destinationplace\n    trustMember: User = new User();\n    products?: Product[] = [];\n    startStorage?: Storage = new Storage();\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BaseService } from './base.service';\nimport { Storage } from '../model/storage';\nimport { ConfigService } from './config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService extends BaseService<Storage>{\n\n  constructor(\n    public http: HttpClient,\n    public config: ConfigService,\n  ) { \n    super(http, config);\n    this.entity = 'storages';\n  }\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}